{"prompt": ["At work, my team have a MySQL database on a Linux 14.04 box. My team is working on changing the permissions to use hostnames rather than IPs (so that the IT team can do what they want to the network and not worry about breaking our access).For example, there would be a user [email\u00a0protected] that we will want to change to [email\u00a0protected]. I've been playing around with my user (since I have root and can still log in). After changing the user profile's host from the IP address to the Hostname, Workbench will give the error...HOST '10.10.xxx.xxx' is not allowed to connect to this MySQL serverWhen I log in to the Linux box and use nslookup my-ws.co.local, the response gives me the correct IP address, so I know there no connection issue between the box and the network. And since the response is correct, I am assuming that the internal DNS is working correctly.Checking the performance_schema.host_cache table, I can see that the IP 10.10.xxx.xxx was not resolved into a host (the HOST column is NULL and the HOST_VALIDATED column is YES).Why is MySQL unable to resolve the IP address into the correct hostname, while nslookup works? Is there some setting in MySQL that I need to fix? Do there need to be records in the internal DNS for each workstation of my team?", "I know you can test if a DNS server is valid by running: dig +short test_hostname @nameserver\nBut what if we don't have a test_hostname to test queries with?\nFor example if the system we want to run this command on is within a restricted network and we don't know what hostnames they have access to or are available on their network.Would using localhost as the test_hostname be a reliable way of checking if this is a valid DNS server?Or I did notice that dig, host, nslookup will all return:;; connection timed out; no servers could be reached\nif you type in an invalid DNS server regardless of what test_hostname you type in, so would just running:dig +short @nameserver\nbe a reliable way of checking if the DNS server is valid?\nThere is no need to check if the DNS server is fake/malicious or not, just if it is valid or invalid.", "Can someone help me with the syntax for a simple bash script that trying to write:echo ping -c 1\necho nslookup\nBasically I want to receive output of one line from the ping and the nslookup information for a domain that I'm checking. Unfortunately I'm unable to get this correctly.P.s. this is basically the first thing that I'm trying to accomplish in bash. Thank you in advance! ", "Can someone help me with the syntax for a simple bash script that trying to write:echo ping -c 1\necho nslookup\nBasically I want to receive output of one line from the ping and the nslookup information for a domain that I'm checking. Unfortunately I'm unable to get this correctly.P.s. this is basically the first thing that I'm trying to accomplish in bash. Thank you in advance! ", "I have a list of several million domain names and I want to see if they are available or not.I tried pywhois first but am getting rate limited. As I don't need an authoritative answer, I thought I would just use nslookup. I am having trouble scripting this though.Basically, what I want to do is, if the domain is registered, echo it. What I'm getting is grep: find\u201d: No such file or directory . I think its something easy and I've just been looking at this for too long...#!/bin/bash\nSTART_TIME=$SECONDS\nfor DOMAIN in `cat ./domains.txt`;\ndo\n    if ! nslookup $DOMAIN | grep -v \u201ccan\u2019t find\u201d; then\n        echo $DOMAIN\n    fi\ndone\necho ELAPSED_TIME=$(($SECONDS - $START_TIME))\n", "I am using centos 6.4. While doing dig or nslookup, I got below errordig google.comdig: error while loading shared libraries: libcrypto.so.4: cannot open shared object file: No such file or directory\nhere is my ldd of dig'# ldd /usr/bin/dig \n    linux-vdso.so.1 =>  (0x00007fff5e674000)\n    liblwres.so.80 => /usr/lib64/liblwres.so.80 (0x00007f73d5c1c000)\n    libdns.so.81 => /usr/lib64/libdns.so.81 (0x00007f73d5883000)\n    libbind9.so.80 => /usr/lib64/libbind9.so.80 (0x00007f73d5676000)\n    libisccfg.so.82 => /usr/lib64/libisccfg.so.82 (0x00007f73d5454000)\n    libgssapi_krb5.so.2 => /lib64/libgssapi_krb5.so.2 (0x00007f73d5210000)\n    libcrypto.so.10 => /usr/lib64/libcrypto.so.10 (0x00007f73d4e75000)\n    libisccc.so.80 => /usr/lib64/libisccc.so.80 (0x00007f73d4c6d000) '\n    ....\nDo you know how can I fix this error?Please help,Thanks,\nSP", "I have a list of hosts in a testfile. I am trying to organize the output into 3 columns.\nI want to do nslookup on hostname and ilo-hostname and put the result into columns as below.Hostname    IP-hostname ilo-hosntame\nHost-1           FQN        FQN \nHost-2           FQN           ** server can't find Host-2: SERVFAIL\nEdit:\nI now have a file that looks like thisHostname \nIloHostname\nHotname\nIloHostname\nHostname** server can't find IloHostname: SERVFAIL //when Ilohostname is not found or does not existScript used to create this fileegrep 'Name:|SERVFAIL' list3 | awk '{sub(/Name:/,\"\")}; 1' | awk '{$1=$1}1' | awk -F. '{print $1}'\nlist3 is output from nslookup"], "chosen": ["\nIt happened to me as well.\nThe reason is skip_name_resolve was turned on in my.cnf configure. It disable reverse DNS query form IP address and use IP address only for logging time.\nif nslookup works, it means reverse DNS query works.\nEspecially, if 'resolveip' command works, that means MySQL server is able to resolve IP address to hostname. Because resolveip is a command coming with MySQL Server, MySQL uses the same way to resolve IP and hostname.\n", "\nTry:\ndig . ns @nameserver +short\n\nEven if the server has no root nameservers configured, if it's alive it will respond to this. If there are root servers, you'll get a valid list of NS records; if not, you'll get an empty response with rcode=NOERROR.\n", "\nhi after writing and saving script and giving permission to the script \njust go the folder and \n    ./ \nof else you just can use \n    sh  \n", "\nHi i would be better if you elaborate your problem, if you want one line output for ping command filter using head \neg \n    ping www.google.com | head -n 1\nor if you are thinking of sending one packet of data to the server \nping -n 1 www.google.com\n\nnslookup www.google.com\nand if your are writing Bash Script\n#!/bin/bash\n   ping -n 1 www.google.com\n   nslookup www.google.com\nsave the file \ngive execute permission and run\nPlease let me know i answered your question\n", "\nThe error is because you have curly quotes in your script, which are not the proper way to quote command line elements. As a result, they're being treated as part of a filename. Change to:\nif ! nslookup $DOMAIN | grep -v \"can't find\"; then\n\n", "\ntry a soft link\n\nln -s /usr/lib64/libcrypto.so.10 /lib\n\nLet us know if that helped you.\nOr you can remove and install again using yum. Normally library files places to its apt position when installs using yum.\n\nyum remove dns-utils\nyum install dns-utils\n\nYou can enable epel repositories in case you need it epel\n", "\n This perl code maybe could be useful with some modifications:\n\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nwhile(<DATA>){\n    my %table;\n    print;\n    my @res = qx/nslookup $_/;\n    my @eres = grep {/(\\w+)\\:\\s+(\\S+)\\s*/g} @res;\n    #now you got it\n    foreach my $r (@eres){\n        if ($r =~ /Name:(.*)/) {print \"$1\\t\"}\n        if ($r =~ /Address:(.*)\\n/ and not $r =~ /\\#/) {print \"$1\\n\"}\n    }\n}\n\n__DATA__\nwww.cisco.com\nwww.google.com\nwww.yahoo.com\n\n"], "rejected": ["\nThere's forward lookups, like resolving an A record, and there's reverse lookups, which involve finding a PTR record. They're often paired together on public networks, but remember that one or more A records can point to the same IP but there should be only one reverse PTR record. Additionally, while the PTR record is supposed to be a resolvable address, this may not be the case, the reverse entry might be invalid or resolve to an entirely different address.\nUnless you have a resolver for 10.10.in-addr.arpa, which is not normally the case since that's a reserved address space, you cannot reverse lookup the IP back to the hostname.\nWith nslookup you can test reverse mapping:\nnslookup 10.10.1.1\n\nWhere that address is whatever you're trying to reverse.\n", "\nYou are not saying if you are testing a recursive or an authoritative nameserver.\nYou also need to define valid. Do you expect a DNS reply for your query?\nYou can test with known invalid/not-existing names such as whatever.test or whatever.example. You should always get a DNS reply back, even if it is NXDOMAIN, or possibly NOERROR in a case of upward referral.\nNote that if you do that towards server you do not control, depending on the rate, people may start to notice and rate limit you or worse.\nYou can also try to query the CHaos zone, however this is often disabled.\nIt is one way to \"identify\" a given nameserver software.\nExample:\n$ dig @a.root-servers.net version.bind TXT chaos +short\n\"NSD\"\n\nEven if the feature is disabled you should get back a DNS reply with REFUSED or NOTIMP or some kind of return code like that:\n$ dig @ns1.google.com version.bind TXT chaos\n\n...\n\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOTIMP, id: 57909\n;; flags: qr rd; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 0\n;; WARNING: recursion requested but not available\n\nPS: note that dig has a header-only flag that allows to send a question with just a header and no content (that is not need to specify a name).\nNot all nameservers may react to that properly though, same may just timeout and not reply at all.\n", "\nThank you for the provided information on the matter. I felt little ashamed from the nature of my question so I spent little more time to read. The solution that I found is the following:\n#!/bin/bash\nfor i in $*;do\nping -c 1 $i &\nnslookup $i &\ndone\n#\n\n'\nOnce I added the scrit to the /bin folder I used the commands:\nchmod +x \"script name\"\ndos2unix \"\"scrit name\" \n\nso not I'm able to use it only by typing the name of the script.\n", "\nThank you for the provided information on the matter. I felt little ashamed from the nature of my question so I spent little more time to read. The solution that I found is the following:\n#!/bin/bash\nfor i in $*;do\nping -c 1 $i &\nnslookup $i &\ndone\n#\n\n'\nOnce I added the scrit to the /bin folder I used the commands:\nchmod +x \"script name\"\ndos2unix \"\"scrit name\" \n\nso not I'm able to use it only by typing the name of the script.\n", "\nIf you have millions to check, you may like to use GNU Parallel to get the job done faster, like this if you want to repeatedly do, say 32 lookups in parallel\nparallel -j 32 nslookup < domains.txt | grep \"^Name\"\n\nIf you want to fiddle with the output of nslookup, the easiest way is probably to declare a little function called lkup(), tell GNU Parallel about it and then use that, like this\n#!/bin/bash\n\nlkup() {\n  if ! nslookup $1 | grep -v \"can't find\"; then\n     echo $1\n  fi\n}\n\n# Make lkup() function visible to GNU parallel\nexport -f lkup\n\n# Check the domains in parallel\nparallel -j 32 lkup < domains.txt\n\nIf the order of the lookups is important to you, you can add the -k flag to parallel to keep the order.\n", "\nWhen you are trying\n\nldd /usr/bin/dig\n\nAre you able to find a line like \n\nlibcrypto.so.4 => not found\n\nIf so Try\n\nlocate libcrypto.so.4\n\nSuppose you can locate the file at /path/to/file/libcrypto.so.4\nthen try the command\n\nexport LD_LIBRARY_PATH=\"/path/to/file\"\n\nThen try command dig. It should be fine. Other wise you need to search for the package that provides the libcrypto.so.4 library\n", "\nYou might use host instead of nslookup. It's output format is a little more amenable to post-processing to accomplish what you want.\n"]}