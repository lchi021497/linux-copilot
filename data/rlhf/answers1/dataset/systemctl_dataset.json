{"prompt": ["I am trying to get the service whether it is installed or not. The script is working fine with systemctl but fails where systemctl is not installed. As an alternative to that I am using service command to check but by doing so I am unable to run the grep command to grep specific service. This script needs to run on multiple linux machine (some with systemctl and some without it). Any help would be appreciatedtest.sh#!/bin/bash\n\nserviceName=ngnix.service\n\nif (systemctl --all --type service || service --status-all) && grep -q \"$serviceName\";then\n    echo \"$serviceName exists.\"\nelse\n    echo \"$serviceName does NOT exist.\"\nfi\noutput without systemctl:./test.sh: line 5: systemctl: command not found\n [ ? ]  hwclock.sh\n [ - ]  mariadb\n [ - ]  nginx\n [ - ]  nginx-debug\n [ - ]  procps\n [ - ]  redis-server\n [ - ]  rsync\noutput with systemctl:ngnix.service does NOT exist.\n", "I am trying to get the service whether it is installed or not. The script is working fine with systemctl but fails where systemctl is not installed. As an alternative to that I am using service command to check but by doing so I am unable to run the grep command to grep specific service. This script needs to run on multiple linux machine (some with systemctl and some without it). Any help would be appreciatedtest.sh#!/bin/bash\n\nserviceName=ngnix.service\n\nif (systemctl --all --type service || service --status-all) && grep -q \"$serviceName\";then\n    echo \"$serviceName exists.\"\nelse\n    echo \"$serviceName does NOT exist.\"\nfi\noutput without systemctl:./test.sh: line 5: systemctl: command not found\n [ ? ]  hwclock.sh\n [ - ]  mariadb\n [ - ]  nginx\n [ - ]  nginx-debug\n [ - ]  procps\n [ - ]  redis-server\n [ - ]  rsync\noutput with systemctl:ngnix.service does NOT exist.\n"], "chosen": ["\nPlace both commands in a command-group and redirect the whole command-group to grep:\nif { systemctl --all --type service || service --status-all; } 2>/dev/null |\n  grep -q \"$serviceName\"; then\n  echo \"$serviceName exists.\"\nelse\n  echo \"$serviceName does NOT exist.\"\nfi\n\n", "\nsystemctl is a control utility for managing systemd units. You can try checking nginx presence inside /usr/lib/systemd/ in case of systemd based init system. Don't forget the philosophy \"Everything is a file.\"\nSee man systemd.unit for more explanation.\nFor ancient distros with init init system check directory /etc/init.d/ see man service\n"], "rejected": ["\nIf you don't want to check if the system has sysV or initd inside you can search just for the binary. If the binary exists, you can assume that the package and the services are installed. For instance:\n#!/usr/bin/env bash\n\nis_nginx_exists=$(which nginx)\n\nif [[ $? == 0 ]]; then\n        echo \"YES\"\nelse\n        echo \"NO\"\nfi\n\nExplanation:\n\nwhich nginx - will try to find the nginx binary from a system wide\nbinaries list;\n$? - this command determinate if previous command    executed\nsuccessfully. In our case 0 means that the binary was found;\n\nIt's fast, clean and most important works in regular VM, docker container, etc.\n", "\nIf you don't want to check if the system has sysV or initd inside you can search just for the binary. If the binary exists, you can assume that the package and the services are installed. For instance:\n#!/usr/bin/env bash\n\nis_nginx_exists=$(which nginx)\n\nif [[ $? == 0 ]]; then\n        echo \"YES\"\nelse\n        echo \"NO\"\nfi\n\nExplanation:\n\nwhich nginx - will try to find the nginx binary from a system wide\nbinaries list;\n$? - this command determinate if previous command    executed\nsuccessfully. In our case 0 means that the binary was found;\n\nIt's fast, clean and most important works in regular VM, docker container, etc.\n"]}