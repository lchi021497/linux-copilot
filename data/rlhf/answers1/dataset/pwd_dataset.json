{"prompt": ["I want to set an alias to switch from two WordPress instances on the CLI. Each of them have the same paths except for the names of their respective sites e.g:srv/deployment/work/sitename1/wp-content/uploads/2018/\nsrv/deployment/work/sitename2/wp-content/uploads/2018/\nHow do I create an alias that takes the \"pwd\" of the current location and cd\ns to exactly the same location on the other site?", "I add the bin of git bash into my path in windows7 for the purpose of using linux command in windows. Other commands like ls, mkdir work fine but when I run \"pwd\" windows can't execute it. I found there is no pwd.exe in the bin directory. So I want to ask where I could download this file or if there is any better way to fix it? Thanks.", "I add the bin of git bash into my path in windows7 for the purpose of using linux command in windows. Other commands like ls, mkdir work fine but when I run \"pwd\" windows can't execute it. I found there is no pwd.exe in the bin directory. So I want to ask where I could download this file or if there is any better way to fix it? Thanks.", "I am executing a python script on one server and needing to read the contents of the passwd file from a remote machine. Does anyone know of a way to do this? Normally I would do:import pwd\npwlist = pwd.getpwall()\n#perform operations\nThis only works for the current system of course, and I'm needing a way to access another machine (like you would via ssh). Any help is appreciated.", "How to get the ino of the current folder you actually are in, with a unix command?\nor whether a man, that could be of any use could be provided.."], "chosen": ["\nAdd the below lines into ~/.bash_aliases\nexport sitename1=srv/deployment/work/sitename1/wp-content/uploads/2018/\nexport sitename2=srv/deployment/work/sitename2/wp-content/uploads/2018/\n\nAfter that\nsource ~/.bash_aliases\n\nThen you can simply type sitename1 and sitename2 from anywhere to switch to respective directories \n", "\nin windows de equivalent command for pwd is path. Change pwd with path\n", "\nA better way of using linux commands on windows is using Cygwin. It will not only allow you to run pwd and other linux commands but it will also make your windows command line as powerful as the linux terminal.\nCheck out the link below:\nhttps://www.cygwin.com\n", "\nYou can use a utility such as scp to copy the passwd file locally. Its easy to split the lines and get the information.\n", "\nyou could also use unix stat:\nstat -c %i .\n\nThis will just give you the inode number.\n"], "rejected": ["\nHow about a bash function instead of an alias, gives you a little more freedom. \nSave this bash function to a file like switchsite.sh. Modify the variables to your needs. Then load it into your bash with:\nsource switchsite.sh\n\nIf you are in /srv/deployment/work/sitename1/wp-content/uploads/2018, do\nswitchsite sitename2\n\nand you will be in /srv/deployment/work/sitename2/wp-content/uploads/2018.\nswitchsite() { \n    # modify this to reflect where your sites are located, no trailing slash\n    where_my_sites_are=/srv/deployment/work\n    # modify this so it includes all characters that can be in a site name\n    pattern_matching_sitenames=[a-z0-9_\\-]\n    # this is the first argument when the function is called\n    newsite=$1\n    # this replaces the site name in the current working directory\n    newdir=$(pwd | sed -n -e \"s@\\($where_my_sites_are\\)/\\($pattern_matching_sitenames\\+\\)/\\(.*\\)@\\1/$newsite/\\3@p\")\n    cd $newdir\n}\n\nHow it works: The sed expression splits the output of pwd into three parts: what is before the current site name, the current site name, and what comes after. Then sed puts it back together with the new site name. Just make sure the pattern can match all characters  that could be in your site name. Research character classes for details.\n", "\nFor Command Prompt in windows which is equivalent of Terminal, you can use cd , instead of pwd... and dir instead of ls.\n", "\nFor Command Prompt in windows which is equivalent of Terminal, you can use cd , instead of pwd... and dir instead of ls.\n", "\nThe pwd module will only work for the current machine. It uses the C library functions defined in <pwd.h>, which do not provide any parameters for a remote machine.  However, this does not prevent you from using ssh tools to run a script on the remote machine.\n", "\nls -id .\n\n-i tells ls to print the inode number, -d says to show the directory, not the contents. . is the current directory.\n"]}