{"prompt": ["How to create a bash script that will delete the content of the directory if the user was deleted? Suppose I have a user1 and some file named somedata. I want to write script that will delete file somedata, when the user1 is deleted.I am trying to create bash file that will do that will loop in it. So far I came up with:#!/bin/bash\nif userdel $user1\nthen \nfind . -name \"somedata\" -exec rm -rf \nfi\n", "How to create a bash script that will delete the content of the directory if the user was deleted? Suppose I have a user1 and some file named somedata. I want to write script that will delete file somedata, when the user1 is deleted.I am trying to create bash file that will do that will loop in it. So far I came up with:#!/bin/bash\nif userdel $user1\nthen \nfind . -name \"somedata\" -exec rm -rf \nfi\n"], "chosen": ["\nOnce the user has been removed, there is no \"user\" to find by that name.  But the find utility has an option -nouser to help:\n\nThe primary shall evaluate as true if the file belongs to a user ID for which the getpwuid() function defined in the System Interfaces volume of POSIX.1-2008 (or equivalent) returns NULL.\n\nTo use it, first just list the unowned files (to verify this is what you want to do):\nfind / -nouser\n\nor (most implementations, yet not in POSIX):\nfind / -nouser -ls\n\nand if the list does not find unexpected files, go ahead and remove them:\nfind / -nouser -exec rm -rf {}+ \n\n", "\nMy version of deluser comes with a --remove-all-files option.\nThat option will scan all filesystems for files owned by the user and delete them.\n"], "rejected": ["\nYou're probably looking for the -r option to userdel.\nFrom the man page:\n\n-r, --remove\n\nFiles in the user's home directory will be removed along with the home directory itself and the user's mail spool. \n  Files located in other file systems will have to be searched for and deleted manually.\n  The mail spool is defined by the MAIL_DIR variable in the login.defs file.\n\nMind that a user may well create files outside of their home directory which are harder to track after the user was deleted.\n", "\nYou're probably looking for the -r option to userdel.\nFrom the man page:\n\n-r, --remove\n\nFiles in the user's home directory will be removed along with the home directory itself and the user's mail spool. \n  Files located in other file systems will have to be searched for and deleted manually.\n  The mail spool is defined by the MAIL_DIR variable in the login.defs file.\n\nMind that a user may well create files outside of their home directory which are harder to track after the user was deleted.\n"]}