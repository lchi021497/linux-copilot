{"prompt": ["This starts driving me nuts! \nI have the case here where a specific user when trying to login to a Linux server (running openSUSE 13.2 (Harlequin) (x86_64)) using a password or a private key is immediately logged out again.\nThe login seems successful (at least according to the ssh log - see below) but immediately after that the connection is closed and the intended command is not executed. The below output captured using ssh's -vvv option:ssh -vvv -i <path_to_private_key> <user>@<FQDN> touch /tmp/mms_was_here\n\n...\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: RSA SHA256:W4i/<removed> <path_to_private_key>\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 60\ndebug1: Server accepts key: pkalg ssh-rsa blen 279\ndebug2: input_userauth_pk_ok: fp SHA256:W4i/<removed-same-as-above>\ndebug3: sign_and_send_pubkey: RSA SHA256:W4i/<removed-same-as-above>\ndebug3: send packet: type 50\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (publickey).\nAuthenticated to <FQDN> ([10.10.8.88]:22).\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug3: send packet: type 90\ndebug1: Requesting [email\u00a0protected]\ndebug3: send packet: type 80\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug3: send packet: type 1\ndebug1: channel 0: free: client-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 client-session (t3 nr0 i0/0 o0/0 fd 4/5 cc -1)\n\nConnection to <FQDN> closed by remote host.\nTransferred: sent 2564, received 2328 bytes, in 0.0 seconds\nBytes per second: sent 400692.9, received 363811.6\ndebug1: Exit status -1\nNote: I replaced a few appearances of the server's name and some key hashes for privacy but they were correct.What makes things even more absurd to me is that a different user can log in without problems (with both, password or key authentication)! I painstakingly compared settings, the content of the .ssh directory and what not. They are the same (modulo the different keys of course). Both user have a valid home directory set as well as /bin/bash as default shell. Their public keys have been added to the respective  ~/.ssh/authorized keys-files, the server's hosts.deny and host.allow files are empty (or rather contain only comments). sshd_config has neither an AllowUser/Group nor a DenyUser/Group section.\nThe password (for password authentication) is set and unlocked. But that user can not login!After the login attempts of both \"service sshd status\" reports:...\n30:3d:c6:43:ee:3d:05:32:90:49:65:71:1a [MD5]\nMay 14 15:43:17 ksta-zhquest-int3 sshd[26223]: pam_unix(sshd:session): session opened for user <user> by (uid=0)\nSo - even that looks good. sshd has admitted the user. But then one user's command is executed while the other's session is immediately closed again and the command is NOT executed! And that happens for both, password as well as key authentication! Why is that user locked out? Any idea anyone?", "This starts driving me nuts! \nI have the case here where a specific user when trying to login to a Linux server (running openSUSE 13.2 (Harlequin) (x86_64)) using a password or a private key is immediately logged out again.\nThe login seems successful (at least according to the ssh log - see below) but immediately after that the connection is closed and the intended command is not executed. The below output captured using ssh's -vvv option:ssh -vvv -i <path_to_private_key> <user>@<FQDN> touch /tmp/mms_was_here\n\n...\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: RSA SHA256:W4i/<removed> <path_to_private_key>\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 60\ndebug1: Server accepts key: pkalg ssh-rsa blen 279\ndebug2: input_userauth_pk_ok: fp SHA256:W4i/<removed-same-as-above>\ndebug3: sign_and_send_pubkey: RSA SHA256:W4i/<removed-same-as-above>\ndebug3: send packet: type 50\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (publickey).\nAuthenticated to <FQDN> ([10.10.8.88]:22).\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug3: send packet: type 90\ndebug1: Requesting [email\u00a0protected]\ndebug3: send packet: type 80\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug3: send packet: type 1\ndebug1: channel 0: free: client-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 client-session (t3 nr0 i0/0 o0/0 fd 4/5 cc -1)\n\nConnection to <FQDN> closed by remote host.\nTransferred: sent 2564, received 2328 bytes, in 0.0 seconds\nBytes per second: sent 400692.9, received 363811.6\ndebug1: Exit status -1\nNote: I replaced a few appearances of the server's name and some key hashes for privacy but they were correct.What makes things even more absurd to me is that a different user can log in without problems (with both, password or key authentication)! I painstakingly compared settings, the content of the .ssh directory and what not. They are the same (modulo the different keys of course). Both user have a valid home directory set as well as /bin/bash as default shell. Their public keys have been added to the respective  ~/.ssh/authorized keys-files, the server's hosts.deny and host.allow files are empty (or rather contain only comments). sshd_config has neither an AllowUser/Group nor a DenyUser/Group section.\nThe password (for password authentication) is set and unlocked. But that user can not login!After the login attempts of both \"service sshd status\" reports:...\n30:3d:c6:43:ee:3d:05:32:90:49:65:71:1a [MD5]\nMay 14 15:43:17 ksta-zhquest-int3 sshd[26223]: pam_unix(sshd:session): session opened for user <user> by (uid=0)\nSo - even that looks good. sshd has admitted the user. But then one user's command is executed while the other's session is immediately closed again and the command is NOT executed! And that happens for both, password as well as key authentication! Why is that user locked out? Any idea anyone?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "I have a sample sh script on my Linux environment, which basically run's the ssh-agent for the current shell, adds a key to it and runs two git commands:#!/bin/bash\neval \"$(ssh-agent -s)\"\nssh-add /home/duvdevan/.ssh/id_rsa\n\ngit -C /var/www/duvdevan/ reset --hard origin/master\ngit -C /var/www/duvdevan/ pull origin master\nScript actually works fine, but every time I run it I get a new process so I think it might become a performance issue and I might end up having useless processes out there.An example of the output:Agent pid 12109\nIdentity added: /home/duvdevan/.ssh/custom_rsa (rsa w/o comment)\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "While installing hadoop in my local machine , i got following error ssh -vvv localhost \nOpenSSH_5.5p1, OpenSSL 1.0.0e-fips 6 Sep 2011 \ndebug1: Reading configuration data /etc/ssh/ssh_config    \ndebug1: Applying options for * \ndebug2: ssh_connect: needpriv 0 \ndebug1: Connecting to localhost [127.0.0.1] port 22. \ndebug1: connect to address 127.0.0.1 port 22: Connection refused \nssh: connect to host localhost port 22: Connection refused\ncan some one help me to resolve this error , than changing port number ", "This is a follow-up question to an earlier question. I've used the same Vagrantfile, but have commented out two lines I don't think are necessary.I'm trying to ssh into my Vagrant box without using vagrant ssh. Below is my Vagrantfile and ssh configuration information:Vagrantfile:Vagrant.configure(2) do |config|\n\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = 6144\n    v.cpus = 2\n    v.name = \"mb_vagrant\"\n  end\n\n  config.vm.box = \"ubuntu/trusty64\"\n\n  config.vm.network :private_network, ip: \"192.168.33.10\"\n\n  config.ssh.forward_agent = true\n\n  # config.vm.provision :shell, path: \"bootstrap.sh\"\n  # config.vm.network :forwarded_port, host: 8001, guest: 8001\n\nend\nThe output from vagrant ssh-config:Host default\n  HostName 127.0.0.1\n  User vagrant\n  Port 2222\n  UserKnownHostsFile /dev/null\n  StrictHostKeyChecking no\n  PasswordAuthentication no\n  IdentityFile \"/Users/mbigras/Google Drive/tmp/chef-repo/.vagrant/machines/default/virtualbox/private_key\"\n  IdentitiesOnly yes\n  LogLevel FATAL\n  ForwardAgent yes\nI've tried sshing into my machine with the following command:$ ssh -i \"/Users/mbigras/Google Drive/tmp/chef-repo/.vagrant/machines/default/virtualbox/private_key\" -p 2222 [email\u00a0protected]\nssh: connect to host 192.168.33.10 port 2222: Connection refused\nAlso, as per the solution described in another answer, I've tried removing ~/.ssh/known_hosts before attempting to connect; however, it also doesn't work:$ rm ~/.ssh/known_hosts\n$ ssh -i \"/Users/mbigras/Google Drive/tmp/chef-repo/.vagrant/machines/default/virtualbox/private_key\" -p 2222 [email\u00a0protected]\nssh: connect to host 192.168.33.10 port 2222: Connection refused\nWhat am I missing here?", "This is a follow-up question to an earlier question. I've used the same Vagrantfile, but have commented out two lines I don't think are necessary.I'm trying to ssh into my Vagrant box without using vagrant ssh. Below is my Vagrantfile and ssh configuration information:Vagrantfile:Vagrant.configure(2) do |config|\n\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = 6144\n    v.cpus = 2\n    v.name = \"mb_vagrant\"\n  end\n\n  config.vm.box = \"ubuntu/trusty64\"\n\n  config.vm.network :private_network, ip: \"192.168.33.10\"\n\n  config.ssh.forward_agent = true\n\n  # config.vm.provision :shell, path: \"bootstrap.sh\"\n  # config.vm.network :forwarded_port, host: 8001, guest: 8001\n\nend\nThe output from vagrant ssh-config:Host default\n  HostName 127.0.0.1\n  User vagrant\n  Port 2222\n  UserKnownHostsFile /dev/null\n  StrictHostKeyChecking no\n  PasswordAuthentication no\n  IdentityFile \"/Users/mbigras/Google Drive/tmp/chef-repo/.vagrant/machines/default/virtualbox/private_key\"\n  IdentitiesOnly yes\n  LogLevel FATAL\n  ForwardAgent yes\nI've tried sshing into my machine with the following command:$ ssh -i \"/Users/mbigras/Google Drive/tmp/chef-repo/.vagrant/machines/default/virtualbox/private_key\" -p 2222 [email\u00a0protected]\nssh: connect to host 192.168.33.10 port 2222: Connection refused\nAlso, as per the solution described in another answer, I've tried removing ~/.ssh/known_hosts before attempting to connect; however, it also doesn't work:$ rm ~/.ssh/known_hosts\n$ ssh -i \"/Users/mbigras/Google Drive/tmp/chef-repo/.vagrant/machines/default/virtualbox/private_key\" -p 2222 [email\u00a0protected]\nssh: connect to host 192.168.33.10 port 2222: Connection refused\nWhat am I missing here?", "I have multiple remote hosts connected to my local host (server-A).  TO ensure/filter the list of hosts which are genuinely reachable to localhost , I do ping test. ping -c1 <remotehost-IP> \n\nif [ \"$?\" != \"0\" ];then\necho \"Not reachable.Exiting...\"\nexit 1;\nfi\nHowever ping test could not provide me any check to ensure that filtered remotehost-IPs are reachable over SSH connection /port 22.     non-root-user@localhost>ssh 172.26.192.15\n    ssh: connect to host 172.26.192.15 port 22: Connection refused\n non-root-user@localhost>echo $?\n 1\n\nnon-root-user@localhost>ssh -v  172.26.192.15\nOpenSSH_3.9p1, OpenSSL 0.9.7a Feb 19 2003\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Applying options for *\ndebug1: Connecting to 172.26.192.15 [172.26.192.15] port 22.\ndebug1: connect to address 172.26.192.15 port 22: Connection refused\nssh: connect to host 172.26.192.15 port 22: Connection refused\nQuery:Above check work for me if connection is refused. However, if SSH connection is possible then I enter into the remote host or proceed to password prompt. Which cause barrier to check return code. So I wanted to know if there is any way to check if the remote IP WOULD be reachable or not reachable over SSH beforehand. ? ", "I have multiple remote hosts connected to my local host (server-A).  TO ensure/filter the list of hosts which are genuinely reachable to localhost , I do ping test. ping -c1 <remotehost-IP> \n\nif [ \"$?\" != \"0\" ];then\necho \"Not reachable.Exiting...\"\nexit 1;\nfi\nHowever ping test could not provide me any check to ensure that filtered remotehost-IPs are reachable over SSH connection /port 22.     non-root-user@localhost>ssh 172.26.192.15\n    ssh: connect to host 172.26.192.15 port 22: Connection refused\n non-root-user@localhost>echo $?\n 1\n\nnon-root-user@localhost>ssh -v  172.26.192.15\nOpenSSH_3.9p1, OpenSSL 0.9.7a Feb 19 2003\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Applying options for *\ndebug1: Connecting to 172.26.192.15 [172.26.192.15] port 22.\ndebug1: connect to address 172.26.192.15 port 22: Connection refused\nssh: connect to host 172.26.192.15 port 22: Connection refused\nQuery:Above check work for me if connection is refused. However, if SSH connection is possible then I enter into the remote host or proceed to password prompt. Which cause barrier to check return code. So I wanted to know if there is any way to check if the remote IP WOULD be reachable or not reachable over SSH beforehand. ? ", "I have multiple remote hosts connected to my local host (server-A).  TO ensure/filter the list of hosts which are genuinely reachable to localhost , I do ping test. ping -c1 <remotehost-IP> \n\nif [ \"$?\" != \"0\" ];then\necho \"Not reachable.Exiting...\"\nexit 1;\nfi\nHowever ping test could not provide me any check to ensure that filtered remotehost-IPs are reachable over SSH connection /port 22.     non-root-user@localhost>ssh 172.26.192.15\n    ssh: connect to host 172.26.192.15 port 22: Connection refused\n non-root-user@localhost>echo $?\n 1\n\nnon-root-user@localhost>ssh -v  172.26.192.15\nOpenSSH_3.9p1, OpenSSL 0.9.7a Feb 19 2003\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Applying options for *\ndebug1: Connecting to 172.26.192.15 [172.26.192.15] port 22.\ndebug1: connect to address 172.26.192.15 port 22: Connection refused\nssh: connect to host 172.26.192.15 port 22: Connection refused\nQuery:Above check work for me if connection is refused. However, if SSH connection is possible then I enter into the remote host or proceed to password prompt. Which cause barrier to check return code. So I wanted to know if there is any way to check if the remote IP WOULD be reachable or not reachable over SSH beforehand. ? ", "I have multiple remote hosts connected to my local host (server-A).  TO ensure/filter the list of hosts which are genuinely reachable to localhost , I do ping test. ping -c1 <remotehost-IP> \n\nif [ \"$?\" != \"0\" ];then\necho \"Not reachable.Exiting...\"\nexit 1;\nfi\nHowever ping test could not provide me any check to ensure that filtered remotehost-IPs are reachable over SSH connection /port 22.     non-root-user@localhost>ssh 172.26.192.15\n    ssh: connect to host 172.26.192.15 port 22: Connection refused\n non-root-user@localhost>echo $?\n 1\n\nnon-root-user@localhost>ssh -v  172.26.192.15\nOpenSSH_3.9p1, OpenSSL 0.9.7a Feb 19 2003\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Applying options for *\ndebug1: Connecting to 172.26.192.15 [172.26.192.15] port 22.\ndebug1: connect to address 172.26.192.15 port 22: Connection refused\nssh: connect to host 172.26.192.15 port 22: Connection refused\nQuery:Above check work for me if connection is refused. However, if SSH connection is possible then I enter into the remote host or proceed to password prompt. Which cause barrier to check return code. So I wanted to know if there is any way to check if the remote IP WOULD be reachable or not reachable over SSH beforehand. ? ", "I have multiple remote hosts connected to my local host (server-A).  TO ensure/filter the list of hosts which are genuinely reachable to localhost , I do ping test. ping -c1 <remotehost-IP> \n\nif [ \"$?\" != \"0\" ];then\necho \"Not reachable.Exiting...\"\nexit 1;\nfi\nHowever ping test could not provide me any check to ensure that filtered remotehost-IPs are reachable over SSH connection /port 22.     non-root-user@localhost>ssh 172.26.192.15\n    ssh: connect to host 172.26.192.15 port 22: Connection refused\n non-root-user@localhost>echo $?\n 1\n\nnon-root-user@localhost>ssh -v  172.26.192.15\nOpenSSH_3.9p1, OpenSSL 0.9.7a Feb 19 2003\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Applying options for *\ndebug1: Connecting to 172.26.192.15 [172.26.192.15] port 22.\ndebug1: connect to address 172.26.192.15 port 22: Connection refused\nssh: connect to host 172.26.192.15 port 22: Connection refused\nQuery:Above check work for me if connection is refused. However, if SSH connection is possible then I enter into the remote host or proceed to password prompt. Which cause barrier to check return code. So I wanted to know if there is any way to check if the remote IP WOULD be reachable or not reachable over SSH beforehand. ? ", "I have multiple remote hosts connected to my local host (server-A).  TO ensure/filter the list of hosts which are genuinely reachable to localhost , I do ping test. ping -c1 <remotehost-IP> \n\nif [ \"$?\" != \"0\" ];then\necho \"Not reachable.Exiting...\"\nexit 1;\nfi\nHowever ping test could not provide me any check to ensure that filtered remotehost-IPs are reachable over SSH connection /port 22.     non-root-user@localhost>ssh 172.26.192.15\n    ssh: connect to host 172.26.192.15 port 22: Connection refused\n non-root-user@localhost>echo $?\n 1\n\nnon-root-user@localhost>ssh -v  172.26.192.15\nOpenSSH_3.9p1, OpenSSL 0.9.7a Feb 19 2003\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Applying options for *\ndebug1: Connecting to 172.26.192.15 [172.26.192.15] port 22.\ndebug1: connect to address 172.26.192.15 port 22: Connection refused\nssh: connect to host 172.26.192.15 port 22: Connection refused\nQuery:Above check work for me if connection is refused. However, if SSH connection is possible then I enter into the remote host or proceed to password prompt. Which cause barrier to check return code. So I wanted to know if there is any way to check if the remote IP WOULD be reachable or not reachable over SSH beforehand. ? ", "I have multiple remote hosts connected to my local host (server-A).  TO ensure/filter the list of hosts which are genuinely reachable to localhost , I do ping test. ping -c1 <remotehost-IP> \n\nif [ \"$?\" != \"0\" ];then\necho \"Not reachable.Exiting...\"\nexit 1;\nfi\nHowever ping test could not provide me any check to ensure that filtered remotehost-IPs are reachable over SSH connection /port 22.     non-root-user@localhost>ssh 172.26.192.15\n    ssh: connect to host 172.26.192.15 port 22: Connection refused\n non-root-user@localhost>echo $?\n 1\n\nnon-root-user@localhost>ssh -v  172.26.192.15\nOpenSSH_3.9p1, OpenSSL 0.9.7a Feb 19 2003\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Applying options for *\ndebug1: Connecting to 172.26.192.15 [172.26.192.15] port 22.\ndebug1: connect to address 172.26.192.15 port 22: Connection refused\nssh: connect to host 172.26.192.15 port 22: Connection refused\nQuery:Above check work for me if connection is refused. However, if SSH connection is possible then I enter into the remote host or proceed to password prompt. Which cause barrier to check return code. So I wanted to know if there is any way to check if the remote IP WOULD be reachable or not reachable over SSH beforehand. ? ", "I use Amazon EC2 instances to perform some complex computation by using the AWS Java SDK, these computations might take so long sometimes. Hence, I need to kill the process running on the EC2 instance remotely from my Java code so that I can reuse the same instance for another task without needing to stop and start the instance.The problem with stop and start, is that Amazon treat partial hours as complete hours, so my aim is to make my code more cost effective.I use SSH to connect with my EC2 instances and that is how I pass commands to be executed there. I doubt that if I disconnect the SSH connection and connect to it again, it would kill whatever process was running there. In short, what I need is away of doing Ctrl+C but from within my Java code (without user intervention). Is that possible?EDIT:\nTo clarify, the computation is executed by a separate tool installed on the Linux EC2 instance. So I just pass the command to start this tool, then the command line waits until its finished and shows the results. On manual usage scenario, I can click Ctrl+C on linux command line and will get control of the command line back. But in my case, I want to do similar thing from java code if possible.", "Thought it should be straight forward but I have a very hard time figuring out the following:I got mongodb connection string: mongodb://user:[email\u00a0protected]:27017/?authSource=adminI want to be able to connect to mongo from localhost at port 1234 by doing: mongo localhost:1234\nThe solution is to create a tunnel, but nothing I do works for me.I tried the following command:ssh -L 1234:localhost:27017 user:[email\u00a0protected] -p 27017\nPlease help me understand what I am doing wrong.", "Thought it should be straight forward but I have a very hard time figuring out the following:I got mongodb connection string: mongodb://user:[email\u00a0protected]:27017/?authSource=adminI want to be able to connect to mongo from localhost at port 1234 by doing: mongo localhost:1234\nThe solution is to create a tunnel, but nothing I do works for me.I tried the following command:ssh -L 1234:localhost:27017 user:[email\u00a0protected] -p 27017\nPlease help me understand what I am doing wrong.", "On machine A I want to have a small python script to execute a command on machine B. Machine A is Windows with freesshd running on it, and machine B can be either Windows or Linux. I only have a username and a password to log in to machine B, no other way of authentication. How can I create a python script to run a command on machine B? ssh would be fine, but where to find that command on Windows? And it has to be done without paramiko, since this module does not wok for unknown reasons.", "I trying to download a file from SSH of cpanel account that is hosted in another cpanel account, but this file can be downloaded only if I am logged in source cpanel account, I am connecting with SSH on WinCSP client, and run this command but return access denied.This is the command line:wget --user myusername --password mypassword http://www.domainname.com:2082/cpsess45379/getbackup/backup-domainname.com-2-23-2016.tar.gz\nI am not a linux expert, can you help me telling me what is the problem?\nthis is the response from SSH:", "I trying to download a file from SSH of cpanel account that is hosted in another cpanel account, but this file can be downloaded only if I am logged in source cpanel account, I am connecting with SSH on WinCSP client, and run this command but return access denied.This is the command line:wget --user myusername --password mypassword http://www.domainname.com:2082/cpsess45379/getbackup/backup-domainname.com-2-23-2016.tar.gz\nI am not a linux expert, can you help me telling me what is the problem?\nthis is the response from SSH:", "ssh command:scp ~/local/app/file.txt /C:/myfolder\nerror message:cp: cannot create regular file `/C:/myfolder/': No such file or directory\nWhat is incorrect or what is the syntax for the local dir?", "I am running PHP version 8.3 on AlmaLinux 9. I have a Laravel 10 project that runs perfectly well on my Windows local machine because all the requirements according to documentation are met. But I am here trying to do the same on my VPS so that it too can run, but to no avail. The issue is when I run php -m, on ssh cli, I see clearly that, there are some missing extensions; mbstring and a couple of others. Installing them with sudo dnf as can be seen below, the response is they are already installed: [user@235 ~]$ sudo dnf install php-bcmath php-curl php-fileinfo php-mbstring php-mysqlnd php-pdo_mysql php-zip\n[sudo] password for user:\nLast metadata expiration check: 4:25:36 ago on Fri 22 Dec 2023 01:05:30 AM UTC.\nPackage php-bcmath-8.3.1-1.el9.remi.x86_64 is already installed.\nPackage php-common-8.3.1-1.el9.remi.x86_64 is already installed.\nPackage php-common-8.3.1-1.el9.remi.x86_64 is already installed.\nPackage php-mbstring-8.3.1-1.el9.remi.x86_64 is already installed.\nPackage php-mysqlnd-8.3.1-1.el9.remi.x86_64 is already installed.\nPackage php-mysqlnd-8.3.1-1.el9.remi.x86_64 is already installed.\nPackage php-pecl-zip-1.22.3-1.el9.remi.8.3.x86_64 is already installed.\nDependencies resolved.\nNothing to do.\nComplete!\nRunning php -m on ssh gives: [root@235 ~]# php -m\n[PHP Modules]\nCore\nctype\ndate\ndom\nfilter\nftp\nhash\njson\nlibxml\nopenssl\npcntl\npcre\nPhar\nposix\nrandom\nreadline\nReflection\nsession\nSimpleXML\nSPL\nstandard\ntokenizer\nxml\nxmlreader\nxmlwriter\nxsl\nzlib\n\n[Zend Modules]\nAnd php -m on a local Windows machine gives: PS C:\\Users\\KlemLloydMwenya\\webapps\\my-app\\backend\\be-a> php -m\n[PHP Modules]\nbcmath\ncalendar\nCore\nctype\ncurl // <--- See this here\ndate\ndom\nfileinfo\nfilter\nhash\niconv\njson\nlibxml\nmbstring // <--- See this here\nmysqlnd\nopenssl\npcre\nPDO // <--- See this here\npdo_mysql // <--- See this here\nPhar\nrandom\nreadline\nReflection\nsession\nSimpleXML\nSPL\nstandard\ntokenizer\nxml\nxmlreader\nxmlwriter\nzip\nzlib\n\n[Zend Modules]\nWhat I have already tried: \nAdded extensions to php.ini file, and even restarted the server with /sbin/service httpd restart, sudo systemctl restart httpd and even manually restarting, as well as system rebooting WHM. \nSome of the issues I have followed and read are: \n\nIssue 1 \nIssue 2 \nThe path to my php.ini is /opt/cpanel/ea-php83/root/etc/php.ini"], "chosen": ["\nCheck if the user is not added to some nologin configuration, it also could have set its default shell to /bin/false or something alike\n", "\nI had a very similar issue, it turned out that:\n\nThe subnet that I had put the particular Debian VM on, was not listed in Active Directory sites and services. Adding that subnet in AD Sites and Services fixed the issue for me.\n\nIt took me ages to find the answer and this question kept coming up in my searches, so I'm posting the answer here in case anyone is in the same boat in future.\nSome other other scenarios with similar or identical symptoms:\n\nPasswordAuthentication=No was set in /etc/ssh/sshd_config. I was attempting authentication using a password.\nThe user had no homefolder. /var/log/auth.log showed the authentication succeeding but then the client side disconnected straight afterwards. I had forgotten to configure /etc/pam.d/common-session with session optional pam_mkhomedir.so\n(Ansible) I had a conflicting variable set in the inventory file causing it to try and use ssh key authentication instead of password authentication. This was only visible with -vvv showing ansible using ssh -o PasswordAuthentication=no\n\n", "\nNo, really, how to check if ssh-agent is already running in bash?\nAnswers so far don't appear to answer the original question...\nHere's what works for me:\nif ps -p $SSH_AGENT_PID > /dev/null\nthen\n   echo \"ssh-agent is already running\"\n   # Do something knowing the pid exists, i.e. the process with $PID is running\nelse\neval `ssh-agent -s`\nfi\n\nThis was taken from here\n", "\n\nAlso, along with all this, is it possible to find an existing ssh-agent process and add my keys into it?\n\nYes. We can store the connection info in a file:\n# Ensure agent is running\nssh-add -l &>/dev/null\nif [ \"$?\" == 2 ]; then\n    # Could not open a connection to your authentication agent.\n\n    # Load stored agent connection info.\n    test -r ~/.ssh-agent && \\\n        eval \"$(<~/.ssh-agent)\" >/dev/null\n\n    ssh-add -l &>/dev/null\n    if [ \"$?\" == 2 ]; then\n        # Start agent and store agent connection info.\n        (umask 066; ssh-agent > ~/.ssh-agent)\n        eval \"$(<~/.ssh-agent)\" >/dev/null\n    fi\nfi\n\n# Load identities\nssh-add -l &>/dev/null\nif [ \"$?\" == 1 ]; then\n    # The agent has no identities.\n    # Time to add one.\n    ssh-add -t 4h\nfi\n\nThis code is from pitfalls of ssh agents which describes both the pitfalls of what you're currently doing, of this approach, and how you should use ssh-ident to do this for you.\n\nIf you only want to run ssh-agent if it's not running and do nothing otherwise:\nif [ $(ps ax | grep [s]sh-agent | wc -l) -gt 0 ] ; then\n    echo \"ssh-agent is already running\"\nelse\n    eval $(ssh-agent -s)\n    if [ \"$(ssh-add -l)\" == \"The agent has no identities.\" ] ; then\n        ssh-add ~/.ssh/id_rsa\n    fi\n\n    # Don't leave extra agents around: kill it on exit. You may not want this part.\n    trap \"ssh-agent -k\" exit\nfi\n\nHowever, this doesn't ensure ssh-agent will be accessible (just because it's running doesn't mean we have $SSH_AGENT_PID for ssh-add to connect to).\n", "\nps -p $SSH_AGENT_PID > /dev/null || eval \"$(ssh-agent -s)\"\nSingle line command. Run for the first time will start ssh-agent. Run for the second time will not start the ssh-agent. Simple and Elegant Mate !!!\n", "\nIf you want it to be killed right after the script exits, you can just add this after the eval line:\ntrap \"kill $SSH_AGENT_PID\" exit\n\nOr:\ntrap \"ssh-agent -k\" exit\n\n$SSH_AGENT_PID gets set in the eval of ssh-agent -s.\nYou should be able to find running ssh-agents by scanning through /tmp/ssh-* and reconstruct the SSH_AGENT variables from it (SSH_AUTH_SOCK and SSH_AGENT_PID).\n", "\nUsing $SSH_AGENT_PID can only test the ssh-agent but miss identities when it is not yet added\n$ eval `ssh-agent`\nAgent pid 9906\n$ echo $SSH_AGENT_PID\n9906\n$ ssh-add -l\nThe agent has no identities.\n\nSo it would be save to check it with ssh-add -l with an expect script like example below:\n$ eval `ssh-agent -k`\nAgent pid 9906 killed\n$ ssh-add -l\nCould not open a connection to your authentication agent.\n$ ssh-add -l &>/dev/null\n$ [[ \"$?\" == 2 ]] && eval `ssh-agent`\nAgent pid 9547\n$ ssh-add -l &>/dev/null\n$ [[ \"$?\" == 1 ]] && expect $HOME/.ssh/agent\nspawn ssh-add /home/user/.ssh/id_rsa\nEnter passphrase for /home/user/.ssh/id_rsa: \nIdentity added: /home/user/.ssh/id_rsa (/home/user/.ssh/id_rsa)\n$ ssh-add -l\n4096 SHA256:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX /home/user/.ssh/id_rsa (RSA)\n\n\nSo when both ssh-agent and ssh-add -l are put to run on a bash script:\n#!/bin/bash\nssh-add -l &>/dev/null\n[[ \"$?\" == 2 ]] && eval `ssh-agent`\nssh-add -l &>/dev/null\n[[ \"$?\" == 1 ]] && expect $HOME/.ssh/agent\n\nthen it would always check and assuring that the connection is running:\n$ ssh-add -l\n4096 SHA256:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX /home/user/.ssh/id_rsa (RSA)\n\n\nYou can also emulate the repeating of commands on above script with do while\n", "\nThe accepted answer did not work for me under Ubuntu 14.04. \nThe test to check if the ssh-agent is running I have to use is:\n[[ ! -z ${SSH_AGENT_PID+x} ]]\n\nAnd I am starting the ssh-agent with:\nexec ssh-agent bash\n\nOtherwise the SSH_AGENT_PID is not set.\nThe following seems to work under both Ubuntu 14.04 and 18.04.\n#!/bin/bash\nsshkey=id_rsa\n# Check ssh-agent\nif [[ ! -z ${SSH_AGENT_PID+x} ]]\nthen\n    echo \"[OK] ssh-agent is already running with pid: \"${SSH_AGENT_PID}\nelse\n    echo \"Starting new ssh-agent...\"\n    `exec ssh-agent bash`\n    echo \"Started agent with pid: \"${SSH_AGENT_PID}\nfi\n# Check ssh-key\nif [[ $(ssh-add -L | grep ${sshkey} | wc -l) -gt 0 ]]\nthen\n    echo \"[OK] SSH key already added to ssh-agent\"\nelse\n    echo \"Need to add SSH key to ssh-agent...\"\n    # This should prompt for your passphrase\n    ssh-add ~/.ssh/${sshkey}\nfi\n\n", "\nThanks to all the answers here.  I've used this thread a few times over the years to tweak my approach.  Wanted to share my current ssh-agent.sh checker/launcher script that works for me on Linux and OSX.\nThe following block is my $HOME/.bash.d/ssh-agent.sh\nfunction check_ssh_agent() {\n  if [ -f $HOME/.ssh-agent ]; then\n    source $HOME/.ssh-agent > /dev/null\n  else\n    # no agent file\n    return 1\n  fi\n\n  if [[ ${OSTYPE//[0-9.]/} == 'darwin' ]]; then\n    ps -p $SSH_AGENT_PID > /dev/null  \n    # gotcha: does not verify the PID is actually an ssh-agent\n    # just that the PID is running\n    return $?\n  fi\n\n  if [ -d /proc/$SSH_AGENT_PID/ ]; then\n    # verify PID dir is actually an agent\n    grep ssh-agent /proc/$SSH_AGENT_PID/cmdline  > /dev/null  2> /dev/null; \n    if [ $? -eq 0 ]; then\n      # yep - that is an agent\n      return 0\n    else\n      # nope - that is something else reusing the PID\n      return 1\n    fi\n  else\n    # agent PID dir does not exist - dead agent\n    return 1\n  fi \n}\n\nfunction launch_ssh_agent() {\n  ssh-agent > $HOME/.ssh-agent\n  source $HOME/.ssh-agent\n  # load up all the pub keys\n  for I in $HOME/.ssh/*.pub ; do\n    echo adding ${I/.pub/}\n    ssh-add ${I/.pub/}\n  done\n}\n\ncheck_ssh_agent\nif [ $? -eq 1 ];then\n  launch_ssh_agent\nfi\n\nI launch the above from my .bashrc using:\nif [ -d $HOME/.bash.d ]; then\n  for I in $HOME/.bash.d/*.sh; do\n    source $I  \n  done\nfi\n\nHope this helps others get up and going quickly. \nCreated a public gist if you want to hack/improve this with me: https://gist.github.com/dayne/a97a258b487ed4d5e9777b61917f0a72\n", "\nRegarding finding running ssh-agents, previous answers either don't work or rely on a magic file like $HOME/.ssh_agent. These approaches require us to believe that user never run agents without saving their output to this file.\nMy approach instead relies on a rarely changed default UNIX domain socket template to find an accessible ssh-agent among available possibilities.\n# (Paste the below code to your ~/.bash_profile and ~/.bashrc files)\nC=$SSH_AUTH_SOCK\nR=n/a\nunset SSH_AUTH_SOCK\nfor s in $(ls $C /tmp/ssh-*/agent.* 2>/dev/null | sort -u) ; do\n  if SSH_AUTH_SOCK=$s ssh-add -l >/dev/null ; then R=$? ; else R=$? ; fi\n  case \"$R\" in\n    0|1) export SSH_AUTH_SOCK=$s ; break ;;\n  esac\ndone\nif ! test -S \"$SSH_AUTH_SOCK\" ; then\n  eval $(ssh-agent -s)\n  unset SSH_AGENT_PID\n  R=1\nfi\necho \"Using $SSH_AUTH_SOCK\"\nif test \"$R\" = \"1\" ; then\n  ssh-add\nfi\n\nIn this approach, SSH_AGENT_PID remains unknown, since it is hard to deduce it for non-roots. I assume it is actually not required for users since they don't normally want to stop agents. On my system, setting SSH_AUTH_SOCK is enough to communicate with agent for e.g. passwordless authentication.\nThe code should work with any shell-compatible shell.\n", "\ncat /usr/local/bin/ssh-agent-pro << 'EOF'\n#!/usr/bin/env bash\nSSH_AUTH_CONST_SOCK=\"/var/run/ssh-agent.sock\"\n\nif [[ x$(wc -w <<< $(pidof ssh-agent)) != x1 ]] || [[ ! -e ${SSH_AUTH_CONST_SOCK} ]]; then\n  kill -9 $(pidof ssh-agent) 2>/dev/null\n  rm -rf ${SSH_AUTH_CONST_SOCK}\n  ssh-agent -s -a ${SSH_AUTH_CONST_SOCK} 1>/dev/null\nfi\n\necho \"export SSH_AUTH_SOCK=${SSH_AUTH_CONST_SOCK}\"\necho \"export SSH_AGENT_PID=$(pidof ssh-agent)\"\nEOF\necho \"eval \\$(/usr/local/bin/ssh-agent-pro)\" >> /etc/profile\n. /etc/profile\n\nthen you can ssh-add xxxx once, you can use ssh-agent everytime when you login.\n", "\nVery simple command to check how many processes are running for ssh-agent (or any other program): pidof ssh-agent\nor:\npgrep ssh-agent\nAnd very simple command to kill all processes of ssh-agent (or any program):\nkill $(pidof ssh-agent)\n", "\nOn Mac, I had the same issue as the OP, and I had multiple identities set up and when I was running git push (even with no local changes) I saw an error message:\n$ git push\nERROR: Write access to repository not granted. fatal: Could not read from remote repository.\n\nTurns out, the issues that I had were twofold:\n\nWhen I ran ssh-add -l, I could see there was an extraneous identity - i.e. one which didn't exist anymore. That is, I thought I deleted it earlier, but it was still registered on ssh-agent.\nI had too many running ssh-agent processes (normally there should only be 1-2 running) when I ran pgrep ssh-agent.\n\n\nThe fix it, the solution was rather simple. First, it is helpful to authorize the SSH key on GitHub.\nIf using Enterprise Cloud, you might need to\nauthorize the SSH key for use with SAML.\nUnder Settings > SSH and GPG keys on your target GitHub account, find your SSH key and ensure SSO is enabled.\nChoose Configure SSO and Authorize - see image below.\n\nNext, to be safe I closed most if not all open terminal windows.\nThen to kill all those running ssh-agent processes, I ran:\nkill $(pgrep ssh-agent)\n\nThen, I started a new window and when it said:\n$ ssh-add -l\nThe agent has no identities\n\nIf SSH_AUTH_SOCK is unset, you might need to first start up ssh-agent. Note tthat I didn't need to run this command myself.\ntest -z \"$SSH_AUTH_SOCK\" && eval \"$(ssh-agent -s)\"\n\nI just add them back with ssh-add:\nssh-add ~/.ssh/id_ed25519_<user>\n\nI can confirm that ssh-add -l now lists all identities after restarting a new terminal window.\n\nIf anyone still runs into issues, there could be a problem with the clone or push URL for a project. For example, using HTTPS instead of SSH.\nNote that insteadOf in git config does not chain. This post (along with its answer) might be helpful.\n", "\nI made this bash function to count and return the number of running ssh-agent processes... it searches ssh-agent process using procfs instead of using $ ps -p $SSH_AGENT_PID:cmd or $SSH_AUTH_SOCK:var ... (these ENV-var. can still be set with old values while ssh-agent's process is already killed: if $ ssh-agent -k or $ $(ssh-agent -k) instead of $ eval $(ssh-agent -k))\nfunction count_agent_procfs(){\n    declare -a agent_list=( ) \n    for folders in $(ls -d /proc/*[[:digit:]] | grep -v /proc/1$);do\n        fichier=\"${folders}/stat\"\n        pid=${folders/\\/proc\\//}\n        [[ -f ${fichier} ]] && [[ $(cat ${fichier} | cut -d \" \" -f2) == \"(ssh-agent)\" ]] && agent_list+=(${pid})\n    done\n    return ${#agent_list[@]}\n}\n\n..and then if there is a lot of ssh-agent process running you get their PID with this list...\"${agent_list[@]}\"\n", "\nI've noticed that having a running agent is not enough because sometimes, the SSH_AUTH_SOCK variable is set or pointing to a socket file that does not exist anymore.\nTherefore, to connect to an already running ssh-agent on your machine, you can do this :\n$ pgrep -u $USER -n ssh-agent -a\n1906647 ssh-agent -s\n$ ssh-add -l\nCould not open a connection to your authentication agent.\n$ test -z \"$SSH_AGENT_PID\" && export SSH_AGENT_PID=$(pgrep -u $USER -n ssh-agent)\n$ test -z \"$SSH_AUTH_SOCK\" && export SSH_AUTH_SOCK=$(ls /tmp/ssh-*/agent.$(($SSH_AGENT_PID-1)))\n$ ssh-add -l\nThe agent has no identities.\n\n", "\nThe answer from AndrewD was the most helpful for me in most cases, but I found out that when $SSH_AGENT_PID is not set or present, the ps command will respond with the error:\nerror: list of process IDs must follow -p\n\nTo fix this, we need to check the existence of the $SSH_AGENT_PID variable so that the condition case will now be:\nif [ -n \"$SSH_AGENT_PID\" ] && ps -p \"$SSH_AGENT_PID\" > /dev/null\n\nThe entire modified snippet:\nif [ -n \"$SSH_AGENT_PID\" ] && ps -p \"$SSH_AGENT_PID\" > /dev/null\nthen\n   echo \"ssh-agent is already running\"\n   # Do something knowing the pid exists, i.e. the process with $PID is running\nelse\neval `ssh-agent -s`\nfi\n\n\nShorter and revised version:\nif ! [ -n \"$SSH_AGENT_PID\" ] || ! ps -p \"$SSH_AGENT_PID\" > /dev/null\nthen\n    eval \"$(ssh-agent -s)\"\nfi\n\nssh-add ~/.ssh/github_ed25519\n\n", "\n\nRemove SSH with the following command:\nsudo apt-get remove openssh-client openssh-server\n\nInstall SSH again with:\nsudo apt-get install openssh-client openssh-server\n\n\nIt will solve your problem.\n", "\nIf install Hadoop on Mac OSX, make sure turn on Remote Login under System Preferences then File Sharing. This worked on my machine.\n\n", "\nDo you have sshd installed? You can verify that with:\nwhich ssh\nwhich sshd\n\nFor detailed information you can visit this link.\n", "\nTry installing whole SSH package pack:\nsudo apt-get install ssh\n\nI had ssh command on my Ubuntu but got the error as you have. After full installation all was resolved.\n", "\nI use a Mac, this worked for me:\nOpen System Preferences, then search for 'sharing'. \nChoose Remote Login, make sure it is on and remember to add required users.\nGot it from here\n", "\nI did all the suggestion above and it did not work. Then I restart the ssh service and it works. This is what I do:\nservice sshd restart\n\nThen I redo\nssh localhost\n\nNow I can connect to my localhost. Hope it helps\n", "\nI used:\nsudo service ssh start\n\nThen:\nssh localhost\n\n", "\nCheck if this port is open. Maybe your SSH demon is not running. See if sshd is running. If not, then start it.\n", "\nIf you restart service then it will work \n$ service sshd restart\n\nthen check \n$ ssh localhost\n\nIt will work\n", "\nMake sure that /etc/hosts.allow contains:\nssh:ALL:allow\nsshd:ALL:allow\n\nOR\nssh:localhost:allow\nsshd:localhost:allow\n\nOR - some other variant\nssh:{host1,host2,host3...}:allow\nsshd{host1,host2,host3...}:allow\n\nINSURE that the first line in the file DOES NOT begin with ALL:ALL:DENY\nNOTHING will be able to communicate with the host... on any port.\n", "\nFor my case(ubuntu 14.04, fresh installed), I just run the following command and it works!\nsudo apt-get install ssh\n\n", "\nFor what its worth I got the following error trying to ssh into my local machine, running Ubuntu 16.04 Xenial, from a vm.\n ssh: connect to host 192.168.144.18 port 22: Connection refused\n\nIt got immediately fixed with:\nsudo apt-get install ssh\n\nTake note, Before fix: 'which sshd' returned nothing and 'which ssh' returned\n/usr/bin/ssh\n\nAnd After the fix: 'which sshd' returned\n/usr/sbin/sshd\n\n", "\nWhat worked for me is:\nsudo mkdir /var/run/sshd\nsudo apt-get install --reinstall openssh-server\n\nI tried all the above mentioned solutions but somehow this directory /var/run/sshd was still missing for me. I have Ubuntu 16.04.4 LTS. Hope my answer helps if someone has the same issue. \nubuntu sshxenial\n", "\nIt might be caused by some of the following:\n\nSSH Server is not installed (only SSH Client), try: apt-get install ssh openssh-client openssh-server\nConnection is blocked by iptables (Firewall), try: ufw allow ssh\n\n", "\nOn mac go to system settings->network->sharing and allow remote login.\ntry ssh localhost\nYou should be good.\n", "\n\nBefore installing/reinstalling anything check the status of sshd . . .\n\nsudo systemctl status sshd\n\n\nYou should see something like . . .\n\n\u25cf sshd.service - OpenSSH server daemon\n   Loaded: loaded (/usr/lib/systemd/system/sshd.service; disabled; vendor prese>\n   Active: inactive (dead)\n     Docs: man:sshd(8)\n           man:sshd_config(5)\n\n\nJust enable and start sshd\n\nsudo systemctl enable sshd\nsudo systemctl start sshd\n\n", "\nMy port number is different. i tried using\nssh localhost -p 8088\n\nthis worked for me \n", "\nActually i solved this,\nI just installed shh daemon.\nin terminal :\n\nsudo apt-get install openssh-server\n\n", "\nIf you're certain that you have installed ssh, then it's possible that ssh and/or sshd has been terminated or the server service hasn't been started. To check whether these processes are running use:\n//this tells you whether your ssh instance is active/inactive\nsudo service ssh status\n\nOR\n//this list all running processes whose names contain the string \"ssh\"\nsudo ps -A | grep ssh\n\nIt's likely that ssh would be active and running but sshd would not.\nTo enable them:\nsudo service ssh start\n\nNB;\n- some systems have a restart option but mine didn't\n", "\ntry sudo vi /etc/ssh/sshd_config\nin first few lies you'll find \nPackage generated configuration file\nSee the sshd_config(5) manpage for details\nWhat ports, IPs and protocols we listen for\nPort xxxxx\nchange Port xxxxx to \"Port 22\" and exit vi by saving changes.\nrestart ssh sudo service ssh restart\n", "\nIf you still face problems, try the following:\nsudo ufw enable    \nsudo apt-get install openssh-server\n\nThis might work too.\n", "\nA way to do is to go to terminal\n$ sudo gedit /etc/hosts\n\n***enter your ip address ipaddress of your pc  localhost \n    ipaddress of your pc  localhost(Edit your pc name with localhost) **\n\nand again restart your ssh service using:\n$ service ssh restart\n\nProblem will be resolve.\nThanks\n", "\nif you are using centOS or Red Hat, you should first update SElinux.\nExecute the following statement\nausearch -c 'sshd' --raw | audit2allow -M my-sshd\n\nthen you need to execute \nsemodule -i my-sshd.pp\n\ngood luck\n", "\nYou may should edit your /etc/hosts.  For example if my hostname is ub0, but the hostname in /etc/hosts is localhost, it may occur \nconnect to host ub0 port 22: Connection refused\n\nBecause the hostname in /etc/hosts is localhost not ub0.\nSo, you should be careful the hostname when building up distributed clusters.\n", "\nFor Linux:\n\nRemove SSH with the following command:\nsudo apt-get remove openssh-client openssh-server\n\nInstall SSH again with:\nsudo apt-get install openssh-client openssh-server\n\n\n", "\nyou need to check the configuration in sshd_config ListenAddress 0.0.0.0 update this and restart the sshd service that will resolve the issue.\n", "\nif you are able to ping and not able to ssh, then it is a firewall. The firewall on 18.4 (not sure about other versions) in on by default and only allow port 8080.\nHere how you fix it\nhttps://linuxconfig.org/how-to-enable-disable-firewall-on-ubuntu-18-04-bionic-beaver-linux\n", "\nCheck file /etc/ssh/sshd_config for Port number. Make sure it is 22.\n", "\nWhat worked for me was modifying the ssh config file to the following:\nHost *\nAddKeysToAgent yes\nUseKeychain yes\nIdentityFile ~/.ssh/id_rsa\n", "\nset the port forwarding section of vagrantfile like so:\n  # using a specific IP.\n    config.vm.network \"private_network\", ip: \"192.168.56.101\"\n    config.vm.network \"forwarded_port\", guest: 22, host: 2290\n\nthis will allow \"normal\" ssh into the the guest without go through vagrant ssh\n", "\nSsh service is bound to host machine's (i.e: 127.0.0.1) port 2222, but in the VM (guest machine) is still listening on port 22 (as the default port).\nSo, you should connect to port 22 on 192.168.33.10 or 2222 on 127.0.0.1. I.e:\n$ ssh -i \"<vagranfile-path>/.vagrant/machines/default/virtualbox/private_key\" \\\n-p 22 [email\u00a0protected]\n\nor\n$ ssh -i \"<vagranfile-path>/.vagrant/machines/default/virtualbox/private_key\" \\\n-p 2222 [email\u00a0protected]\n\nAlso, it is not required to remove ~/.ssh/known_hosts file. Adding the following option will avoid host fingerprint check: -o UserKnownHostsFile=/dev/null\n", "\nNetcat should also do the job.\nnc -z host 22\n\n-z specifies that no data be sent and to only scan for running daemons\nThe output will look something like this:\nConnection to localhost 22 port [tcp/ssh] succeeded!\n\nSo if you want to handle this a little more programmatically you could just throw the output to /dev/null and then check that the $? is equal to 0 to verify that the connection is available.\n", "\nA Bash-Specific Solution\nIf you are using the Bash shell specifically, then you have access to TCP and UDP sockets. For example:\nif (exec 3<>/dev/tcp/74.207.252.238/22) 2> /dev/null; then\n    echo open\nelse\n    echo closed\nfi\n\nThis won't tell you if the actual protocol in use is really SSH, but is often sufficient to determine that a given port is listening. Your mileage may vary. \n", "\nThis is the simplest command that satisfies the question (without need for nmap or nc):\nssh -o PubkeyAuthentication=no -o PasswordAuthentication=no -o KbdInteractiveAuthentication=no -o ChallengeResponseAuthentication=no host.foo.com 2>&1 | grep \"Permission denied\"\n\nExplanation:  attempt to connect with the usual auth methods disabled and grep STDERR for \"Permission denied\".   Returns exit status 0 if the host is serving SSH, regardless of credentials, and does not hang waiting for password input.\n", "\nThe other answers are checking if some process is listening on the remote machine on the SSH port 22.\nBut that process might not be an sshd daemon (some sysadmins are starting other daemons on that port, e.g. some HTTPS service...).\nOr the remote sshd daemon has been configured with a non-POSIX shell. For example, as a GCC contributor, I am using ssh thru svn to gcc.gnu.org but I cannot run a shell command there...\nSo I believe you should really try the ssh command. If the remote machine is POSIX and you expect to have some Posix shell runnable thru ssh, try ssh remotehost /bin/true (or perhaps ssh remotehost 'echo $$', with the hope that echo would be a remote shell builtin)\nAlso, an ssh command could temporarily fail (e.g. because the remote host has too many processes running under your user, so the fork inside sshd would fail)\nIf you want that inside some program, consider using some library like libssh.\nBTW, you can configure your local .ssh/config to never ask any password (or pass with -F some specific configuration file ensuring that no password is asked), or (as commented by CodeGnome), use ssh -o BatchMode=yes to disable password prompts. \n", "\nIn contrast to the answer from SlackFlag, which attempts an actual login by disallowing any authentication method, you could use ssh-keyscan. This essentially does all SSH validations, except an actual login.\nIt is designed to do different tasks, but is an excellent tool for the problem at hand:\n$ ssh-keyscan hostname >/dev/null 2>&1\n\nAdditionally, you can add the -T n to have a timeout after n seconds.\n", "\nIf you need to check continuously in a script whether a node is reachable, e.g. after a reboot, use this loop:\nuntil [ $(ssh-keyscan $node >/dev/null 2>&1)$? -eq 0 ]; do\n    sleep 10\n    # (...)\ndone\n\nssh-keyscan returns 0 when it successfully connects to a node. The loop keeps executing the given set of commands until the exit code of the ssh-keyscan command is equal to 0.\n", "\nYou could use nmap:\nnmap -p 22 --open -sV 172.26.192.0/24 > sshservers\n\n", "\nUse the SIGAR library to scan the process list on a machine and kill your process.\nUse getProcList() to get all process IDs, getProcArgs() to get the full command line of each process, and kill() to kill the relevant process or processes.\nSo if a task is running and you want to kill it, SSH again into the machine and run your SIGAR based process killer.\n", "\nMongoDB and ssh use different protocols, so you can't use ssh to connect directly to a mongod process.\nIf you want to use an ssh tunnel you will first need to have an account on the destination machine, and use that account's credentials with ssh to connect to port 22 (assuming default port).  The mongod username/password will probably not be valid for ssh.\nOnce the tunnel is established, you would connect to the local port using a driver or mongo shell using the connection string:\nmongodb://user:[email\u00a0protected]:1234/?authSource=admin\n\n", "\nYou can use SSH tunneling to access your MongoDB.\nLinux/mac\nssh [email\u00a0protected] -L 27018:127.0.0.1:27017 -N\nConnection String:\nmongodb://localhost:27018/betterdatabase?authSource=admin&retryWrites=true&w=majority&directConnection=true\n", "\nIf you can't get paramiko working, just do it manually with Popen: http://python-for-system-administrators.readthedocs.org/en/latest/ssh.html\n", "\nCan you please give a try with the following command.\nwget ftp://SERVER-IP/public_html/FILEPATH/FILENAME.tar.gz --ftp-user=cP-USER --ftp-pass=PASSWORD\n\n", "\nI finally get archieve this, the way to log in cpanel and download the file is as follows:\nwget -O /dev/null --http-user=##UserName## --http-password=##Password## http://www.domainname.com:2082/cpsess345308509/getbackup/backup-yourdomainbackup.com-2-23-2016.tar.gz --auth-no-challenge\nWith the --auth-no-challenge option I fixes the following issue:\nHTTP request sent, awaiting response... 401 Access Denied\nUnknown authentication scheme.\nAuthorization failed.\n\nAccording wget manual, if this option is given, Wget will send Basic HTTP authentication information (plaintext username and password) for all requests, just like Wget 1.10.2 and prior did by default.\n", "\nThe command should be modified as below\nscp ~/local/app/file.txt C:/myfolder\n\nLoose the '/' in front\n", "\nI found that the PHP extensions in question were available but needed to have their respective install buttons in WHM, toggled on; and then provision them to fully install them and make them available.\n"], "rejected": ["\nI had a look-alike problem once upgrading an openSUSE computer from a 15.3 release to Tumbleweed. It turned out that there was an old /etc/ssh/sshd_config configuration file left over in the file system which contained in the line for \"Subsystem sftp\" a binary file /usr/lib/ssh/sftp-server that does not exist. The problem was solved by removing (sic) that /etc/ssh/sshd_config file such that the file at the slightly different location /usr/etc/sshd_config took over, which contained an valid Subsystem sftp binary file in the /usr/libexec directory, then restarting the sshd .\n", "\nI had a look-alike problem once upgrading an openSUSE computer from a 15.3 release to Tumbleweed. It turned out that there was an old /etc/ssh/sshd_config configuration file left over in the file system which contained in the line for \"Subsystem sftp\" a binary file /usr/lib/ssh/sftp-server that does not exist. The problem was solved by removing (sic) that /etc/ssh/sshd_config file such that the file at the slightly different location /usr/etc/sshd_config took over, which contained an valid Subsystem sftp binary file in the /usr/libexec directory, then restarting the sshd .\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nYou can modify line #1 to:\nPID_SSH_AGENT=`eval ssh-agent -s | grep -Po \"(?<=pid\\ ).*(?=\\;)\"`\n\nAnd then at the end of the script you can do:\nkill -9 $PID_SSH_AGENT\n\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nAnswer for this question incase you're using a WSL system:\nrun sudo service ssh start\nafter reinstalling ssh. This helped me.\n", "\nby the way if anyone is stuck in a wsl prompt and testing other than using the vagrant-ssh command then you can simply use what the ip address of eth0 is bound to, you can find this out using ip route you can then plug in the ip there to your ssh command and you should have no issues so my output from ip route is:\ndefault via 172.19.192.1 dev eth0 proto kernel\n172.19.192.0/20 dev eth0 proto kernel scope link src 172.19.197.225\n\nso just use 172.19.192.1 instead of 127.0.0.1\nSoo\nssh [email\u00a0protected] -p 2222 -i \".\\vagrant\\<path>\"\n", "\nby the way if anyone is stuck in a wsl prompt and testing other than using the vagrant-ssh command then you can simply use what the ip address of eth0 is bound to, you can find this out using ip route you can then plug in the ip there to your ssh command and you should have no issues so my output from ip route is:\ndefault via 172.19.192.1 dev eth0 proto kernel\n172.19.192.0/20 dev eth0 proto kernel scope link src 172.19.197.225\n\nso just use 172.19.192.1 instead of 127.0.0.1\nSoo\nssh [email\u00a0protected] -p 2222 -i \".\\vagrant\\<path>\"\n", "\nGrep Output from Nmap\nIf you need an exit status, grep the results from nmap and use the exit status from grep. For example:\n$ nmap -sT -Pn -p 22 host.example.com | egrep 'open\\s+ssh'\n22/tcp open  ssh\n\nIn this example, the exit status will be from grep, not nmap. Grep will return 0 if the port is open, and 1 if it isn't. You can use the results directly, or branch off of $?. For example:\nnmap -sT -Pn -p 22 host.example.com | egrep -q 'open\\s+ssh'\nif [[ $? -ne 0 ]]; then\n    echo 'Not reachable. Exiting ...' > /dev/stderr\n    exit 1\nfi\n\n", "\nGrep Output from Nmap\nIf you need an exit status, grep the results from nmap and use the exit status from grep. For example:\n$ nmap -sT -Pn -p 22 host.example.com | egrep 'open\\s+ssh'\n22/tcp open  ssh\n\nIn this example, the exit status will be from grep, not nmap. Grep will return 0 if the port is open, and 1 if it isn't. You can use the results directly, or branch off of $?. For example:\nnmap -sT -Pn -p 22 host.example.com | egrep -q 'open\\s+ssh'\nif [[ $? -ne 0 ]]; then\n    echo 'Not reachable. Exiting ...' > /dev/stderr\n    exit 1\nfi\n\n", "\nGrep Output from Nmap\nIf you need an exit status, grep the results from nmap and use the exit status from grep. For example:\n$ nmap -sT -Pn -p 22 host.example.com | egrep 'open\\s+ssh'\n22/tcp open  ssh\n\nIn this example, the exit status will be from grep, not nmap. Grep will return 0 if the port is open, and 1 if it isn't. You can use the results directly, or branch off of $?. For example:\nnmap -sT -Pn -p 22 host.example.com | egrep -q 'open\\s+ssh'\nif [[ $? -ne 0 ]]; then\n    echo 'Not reachable. Exiting ...' > /dev/stderr\n    exit 1\nfi\n\n", "\nGrep Output from Nmap\nIf you need an exit status, grep the results from nmap and use the exit status from grep. For example:\n$ nmap -sT -Pn -p 22 host.example.com | egrep 'open\\s+ssh'\n22/tcp open  ssh\n\nIn this example, the exit status will be from grep, not nmap. Grep will return 0 if the port is open, and 1 if it isn't. You can use the results directly, or branch off of $?. For example:\nnmap -sT -Pn -p 22 host.example.com | egrep -q 'open\\s+ssh'\nif [[ $? -ne 0 ]]; then\n    echo 'Not reachable. Exiting ...' > /dev/stderr\n    exit 1\nfi\n\n", "\nGrep Output from Nmap\nIf you need an exit status, grep the results from nmap and use the exit status from grep. For example:\n$ nmap -sT -Pn -p 22 host.example.com | egrep 'open\\s+ssh'\n22/tcp open  ssh\n\nIn this example, the exit status will be from grep, not nmap. Grep will return 0 if the port is open, and 1 if it isn't. You can use the results directly, or branch off of $?. For example:\nnmap -sT -Pn -p 22 host.example.com | egrep -q 'open\\s+ssh'\nif [[ $? -ne 0 ]]; then\n    echo 'Not reachable. Exiting ...' > /dev/stderr\n    exit 1\nfi\n\n", "\nGrep Output from Nmap\nIf you need an exit status, grep the results from nmap and use the exit status from grep. For example:\n$ nmap -sT -Pn -p 22 host.example.com | egrep 'open\\s+ssh'\n22/tcp open  ssh\n\nIn this example, the exit status will be from grep, not nmap. Grep will return 0 if the port is open, and 1 if it isn't. You can use the results directly, or branch off of $?. For example:\nnmap -sT -Pn -p 22 host.example.com | egrep -q 'open\\s+ssh'\nif [[ $? -ne 0 ]]; then\n    echo 'Not reachable. Exiting ...' > /dev/stderr\n    exit 1\nfi\n\n", "\nGrep Output from Nmap\nIf you need an exit status, grep the results from nmap and use the exit status from grep. For example:\n$ nmap -sT -Pn -p 22 host.example.com | egrep 'open\\s+ssh'\n22/tcp open  ssh\n\nIn this example, the exit status will be from grep, not nmap. Grep will return 0 if the port is open, and 1 if it isn't. You can use the results directly, or branch off of $?. For example:\nnmap -sT -Pn -p 22 host.example.com | egrep -q 'open\\s+ssh'\nif [[ $? -ne 0 ]]; then\n    echo 'Not reachable. Exiting ...' > /dev/stderr\n    exit 1\nfi\n\n", "\nOne dirty/functional way would be to kill your process via SSH using the java Runtime to execute it. \nSomething like\nRuntime runtime = Runtime.getRuntime();\nProcess p = runtime.exec(\"ssh user@host command\");\n\nSo in your case, if you know the program's PID (1234 for example):\nProcess p = runtime.exec(\"ssh user@host kill 1234\");\n\nOr if you know the program's name:\nProcess p = runtime.exec(\"ssh user@host pkill my_program_name_x64\");\n\nNote that you usually have to give absolute paths to the executables invoked via runtime. \nSo you'll have to replace ssh by something like /bin/ssh or /usr/bin/ssh as well as for kill and pkill or killall.\n", "\nYou need to have a unix user on 123.123.123.111\nssh -L 1234:localhost:27017 [email\u00a0protected]\n\nThen your local mongodb connection string is : mongodb://user:password@localhost:1234/?authSource=admin\n", "\nYou need to have a unix user on 123.123.123.111\nssh -L 1234:localhost:27017 [email\u00a0protected]\n\nThen your local mongodb connection string is : mongodb://user:password@localhost:1234/?authSource=admin\n", "\nI haven't tried this on Windows but to handle input and output of a command pexpect is a good candidate. It also has a ssh part http://pexpect.readthedocs.org/en/latest/api/pxssh.html. \nDid some more digging. There is a windows port of pexpect: https://gist.github.com/anthonyeden/8488763\nUse that along with putty on the command line in windows.\nExample of Putty on command line: http://etherealmind.com/putty-command-line/\n", "\nwget -O test.zip --http-user=cpanelusername --http-password=cpanelpassword 'https://example.com:2083/cpsess3xxx/frontend/vvv/dailybackups/index.live.php?r=operations%2FdownloadResult&guid=14ba2e23-bf42-49c8-9cab-e0906c21b2b4' --auth-no-challenge (test.zip, is the filename you want to give to the downloaded file, enclose the URL in single quotes)\n", "\nwget -O test.zip --http-user=cpanelusername --http-password=cpanelpassword 'https://example.com:2083/cpsess3xxx/frontend/vvv/dailybackups/index.live.php?r=operations%2FdownloadResult&guid=14ba2e23-bf42-49c8-9cab-e0906c21b2b4' --auth-no-challenge (test.zip, is the filename you want to give to the downloaded file, enclose the URL in single quotes)\n", "\nIf you have pscp.exe in your windows machine then you can try this command\npscp.exe user@remoteserver:~/local/app/file.txt /C:/myfolder\nelse you can use WinSCP\n", "\n\nThe path to my php.ini is /opt/cpanel/ea-php83/root/etc/php.ini\n\nSo, you are not running AlmaLinux but a heavily altered by cpanel distro.\n\ndnf install php-bcmath php-curl php-fileinfo php-mbstring php...\n\nThis command is useless are you are not using this PHP.\nTry\nwhich php\n/usr/bin/php -m\n\nYou probably need to install extensions for cpanel.\n"]}